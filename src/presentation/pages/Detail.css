/* Detail.css */

/* 전체 컨테이너 */
.project-detail-container {
  display: grid;
  grid-template-columns: 65px 1fr;
  height: 100vh;
  background: linear-gradient(135deg, #1a1b3d, #2d1b69);
  color: white;
  font-family: 'Arial', sans-serif;
  overflow: hidden;
  gap: 15px;
  flex-direction: row;
}

/* 사이드바 스타일 */
.subtask-sidebar {
  background: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(10px);
  border-radius: 50px;
  padding: 20px;
  display: flex;
  flex-direction: column;
  gap: 20px;
  z-index: 1000;
}

.subtask-sidebar:hover {
  width: 250px;
  border-radius: 20px;
}

.main-area{
  display: grid;
  grid-template-rows: auto 1fr 140px; /* 헤더 - 작업영역 - 타임라인 고정 높이 */
  height: 100vh;
  overflow: hidden;
  gap: 5px;
}

/* 헤더 영역 */
.project-detail-header {
  padding: 20px 30px;
  background: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(10px);
  border-radius: 20px;
  z-index: 5;
}

/*마인드맵, 투두리스트, 영감카드*/
.subtask-workspace{
  display: flex;
  flex-direction: row;
  gap: 15px;
  overflow: hidden;
}

.project-detail-main{
  position: relative;
  flex: 1;
  overflow: hidden;
  border-radius: 20px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: inset 0 0 25px rgba(162, 172, 255, 0.962);
}

.project-detail-right{
  width: 250px;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

/* 네비게이션 버튼 그룹 */
.nav-buttons {
  display: flex;
  gap: 1rem;
}

/* 액션 버튼 그룹 */
.action-buttons {
  display: flex;
  gap: 1rem;
}

/* 기본 버튼 스타일 */
.btn {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 0.5rem;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 500;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* 노드 추가 버튼 */
.btn-add {
  background: #007bff;
  color: white;
}

.btn-add:hover {
  background: #0056b3;
  transform: translateY(-2px);
}

/* ReactFlow 컨테이너 */
.react-flow-container {
  flex: 1;
  position: relative;
  background: transparent;
}

/* 폼 오버레이 */
.form-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2000;
  backdrop-filter: blur(5px);
}

/* 로딩 컨테이너 */
.loading-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.loading-text {
  color: white;
  font-size: 1.5rem;
  font-weight: 300;
}

/* 노드 스타일 */
.my-node {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-image: url('../components/images/pj-high.png');
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
  border: 3px solid #fff;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: bold;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);
}

.my-node:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
  border-color: #007bff;
}

/* 중심 노드 특별 스타일 */
.center-node {
  background: #ffe58f;
  border-color: #faad14;
  font-weight: bold;
}

.center-node:hover {
  transform: scale(1.05);
  border-color: #ffd700;
}

/* 일반 노드 클릭 효과 */
.my-node:active {
  transform: translateY(0);
}

/* ReactFlow 커스텀 스타일 */
/* .react-flow__node-default {
  background: transparent;
  border: none;
  padding: 0;
}

.react-flow__edge-default {
  stroke: #ffffff;
  stroke-width: 2;
}

.react-flow__edge:hover {
  stroke: #007bff;
  stroke-width: 3;
} */

/* 반응형 디자인 */
@media (max-width: 768px) {
  .detail-header {
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
  }
  
  .nav-buttons,
  .action-buttons {
    flex-direction: column;
    width: 100%;
  }
  
  .btn {
    width: 100%;
    justify-content: center;
  }
  
  .my-node {
    min-width: 100px;
    font-size: 0.9rem;
  }
  
  .center-node {
    min-width: 130px;
    font-size: 1rem;
  }
}

/* 애니메이션 효과 */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.detail-container {
  animation: fadeIn 0.5s ease-out;
}

/* 노드 생성 애니메이션 */
@keyframes nodeAppear {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.my-node {
  animation: nodeAppear 0.3s ease-out;
}